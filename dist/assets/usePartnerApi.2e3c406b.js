var t=Object.defineProperty,e=Object.defineProperties,a=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,c=(e,a,s)=>a in e?t(e,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[a]=s,d=(t,e)=>{for(var a in e||(e={}))r.call(e,a)&&c(t,a,e[a]);if(s)for(var a of s(e))n.call(e,a)&&c(t,a,e[a]);return t};import{B as p,C as i}from"./vendor.1c8b4573.js";import{d as o,f as h,A as u}from"./index.d7dc1ff6.js";function P(){const t=o(),{catchResponse:s}=h();return{getAllPartner:async e=>{const a=await t.get("/Partners",{params:e});return s(a)},getPartnerById:async e=>{const a=await t.get(`/Partners/${e}`);return s(a)},createPartner:e=>t.post("/Partners",e),editPartner:(e,a)=>t.put(`/Partners/${e}`,a),getPartnerBatchById:async e=>{const a=await t.get(`/Partners/Batches/${e}`);return s(a)},createPartnerBatch:async e=>await t.post("/Partners/Batches/",e),editPartnerBatch:async e=>await t.put(`/Partners/Batches/${e.id}`,e),createBatch:e=>t.post("/Partners/Batches",e),getTicketDate:async e=>await t.get(`Partners/Batches/${e.batchId}/TicketDate`,{params:{ticketType:e.ticketType}}),updateChangeTicketDate:async(e,a)=>await t.put(`Partners/Batches/${e}/ChangeExpire`,a),getBatchStudents:async e=>{const a=await t.get(`Partners/Batches/Students/${e.batchId}`,{params:d({},e)});return s(a)},deleteBatchStudent:async(e,a)=>t.delete(`Partners/Batches/Students/${e}`,{data:{isDeleteTicket:a}}),changeBatchStudent:async e=>{const{studentId:a,batchId:s,batchStudentId:r}=e;return t.put(`Partners/Batches/Students/${r}/ChangeBatch`,{studentId:a,batchId:s})},deleteBatchPackage:async(e,a)=>t.delete(`Partners/Batches/Enrolls/${e}`,{data:d({},a)}),updatePackageItem:async e=>t.put(`Partners/Batches/Enrolls/${e.batchStudentId}/UpdatePackageItem`,d({},e)),changeBatchPackage:async(e,a)=>t.put(`Partners/Batches/Enrolls/${e}`,d({},a)),getSatisfies:async r=>{const n=await t.get(`Partners/Batches/Students/${r.partnerBatchId}/Satisfies`,{params:(c=d({},r),p={startDate:r.startDate,endDate:r.endDate},e(c,a(p)))});var c,p;return s(n)},getBatchUsers:async e=>{const a=await t.get(`/Partners/Batches/${e.batchId}/Users`,{params:d({},e)});return s(a)},createBatchUser:async e=>t.post(`/Partners/Batches/${e.batchId}/Users`,e),deleteBatchUser:async e=>t.delete(`/Partners/Batches/${e.batchId}/Users/${e.partnerUserId}`),getPartnerBatchStudentsWeekly:async e=>await t.get(`/Partners/Batches/Students/${e.partnerBatchId}/Weekly`,{params:d({},e)}),exportBatchStudentsLevel:async t=>await p.get(`https://admin-api.globish.dev/Partners/Batches/${t}/ReportStudentsLevel`,{headers:{"Content-Type":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","Content-Disposition":"attachment; filename=students.xlsx",Authorization:`Bearer ${i.get(u)}`},responseType:"arraybuffer"}),createPartnerBatchStudents:async e=>await t.post("Partners/Batches/Students"+((null==e?void 0:e.packageId)?"/WithPackage":""),e),createPartnerBatchStudentsWithCsv:async e=>{const a=new FormData;return a.append("batchId",`${e.batchId}`),e.packageId&&a.append("packageId",`${e.packageId}`),e.globishPlusLevel&&a.append("globishPlusLevel",`${e.globishPlusLevel}`),a.append("file",e.file),a.append("startDate",e.startDate),a.append("expireDate",e.expireDate),t.post("Partners/Batches/Students/Csv"+((null==e?void 0:e.packageId)?"/WithPackage":""),a,{headers:{"Content-Type":"multipart/form-data"}})},createPartnerBatchQuiz:async e=>await t.post(`Partners/Batches/Students/${e.batchId}/AddQuiz`,e),getPartnerUsers:async e=>{const a=await t.get("/PartnerUsers",{params:e});return s(a)},createPartnerUsers:async e=>t.post("/PartnerUsers",e),getPartnerUserById:async e=>{const a=await t.get(`/PartnerUsers/${e}`);return s(a)},updatePartnerUsers:async(e,a)=>await t.put(`/PartnerUsers/${e}`,a),getPartnerOrientations:async e=>{const a=await t.get(`/Partners/Batches/Students/${e.partnerBatchId}/Orientations`,{params:d({},e)});return s(a)},createPartnerOrientation:async(e,a)=>await t.post(`/Partners/Batches/Students/${e}/Orientations`,a),getTestResult:async(e,a)=>await t.get(`Partners/Consults/Students/${e}/Tests`,{params:{testType:a}}),createTestResult:async(e,a)=>await t.post(`Partners/Consults/Students/${e}/Tests`,a),updateTestResult:async(e,a)=>await t.put(`Partners/Consults/Students/${e}/Tests/${a.id}`,a)}}export{P as u};
